name: FRONTEND-CI

# Controls when the action will run. 
on:

  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  workflow_dispatch:

env:
  REGISTRY_HOSTNAME: us.icr.io
  IMAGE_NAME: hello-world
  K8S_CONFIG: ${{ secrets.K8S_CONFIG }}
  DEPLOYMENT_NAME: hello-python
  PORT: 5001

jobs:
  # This workflow contains a single job called "build"
  build:
    name: build
    runs-on: ubuntu-latest
    env:
      working-directory: ./journal/frontend
    steps:
      - name: scm
        
        uses: actions/checkout@v2

      - name: Build with Docker
        run: |
          docker build -t "$REGISTRY_HOSTNAME"/"$DOCKER_USER"/"$IMAGE_NAME":"$GITHUB_SHA" .
        working-directory: ${{ env.working-directory }}

      # Push the image to IBM Container Registry
      - name: Push the image to ICR
        run: |
          docker push $REGISTRY_HOSTNAME/$DOCKER_USER/$IMAGE_NAME:$GITHUB_SHA
  # deploy:
  # # Deploy the Docker image to the IKS cluster
  #     - name: Deploy to IKS
  #       run: |
  #         kubectl config current-context
  #         kubectl create deployment $DEPLOYMENT_NAME --image=$REGISTRY_HOSTNAME/$ICR_NAMESPACE/$IMAGE_NAME:$GITHUB_SHA --dry-run -o yaml > deployment.yaml
  #         kubectl apply -f deployment.yaml
  #         kubectl rollout status deployment/$DEPLOYMENT_NAME
  #         kubectl create service loadbalancer $DEPLOYMENT_NAME --tcp=80:$PORT --dry-run -o yaml > service.yaml
  #         kubectl apply -f service.yaml
  #         kubectl get services -o wide
